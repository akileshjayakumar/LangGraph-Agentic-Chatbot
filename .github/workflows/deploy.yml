name: Deploy Gradio App to Azure from Docker Hub

on:
  push:
    branches:
      - main  # Trigger deployment on changes to the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # Fetch only the latest commit for efficiency

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build and Push Docker Image to Docker Hub
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: . # Set build context to the root of the repository
          file: infra/Dockerfile # Use the Dockerfile from the 'infra' folder
          push: true # Push the built image to Docker Hub
          tags: ${{ secrets.DOCKER_USERNAME }}/gradio-app:latest

      # Step 5: Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 6: Create App Service if it doesn't exist
      - name: Create App Service if Missing
        run: |
          RESOURCE_GROUP=$(echo ${{ secrets.AZURE_CREDENTIALS }} | jq -r '.resourceGroup')
          REGION=$(echo ${{ secrets.AZURE_CREDENTIALS }} | jq -r '.region')
          APP_SERVICE_PLAN=$(echo ${{ secrets.AZURE_CREDENTIALS }} | jq -r '.appServicePlan')

          az group create --name "$RESOURCE_GROUP" --location "$REGION"
          az appservice plan create --name "$APP_SERVICE_PLAN" \
            --resource-group "$RESOURCE_GROUP" --sku B1 --is-linux
          if ! az webapp show --name ${{ secrets.AZURE_APP_NAME }} --resource-group "$RESOURCE_GROUP"; then
            az webapp create --resource-group "$RESOURCE_GROUP" \
              --plan "$APP_SERVICE_PLAN" \
              --name ${{ secrets.AZURE_APP_NAME }} \
              --deployment-container-image-name ${{ secrets.DOCKER_USERNAME }}/gradio-app:latest
          fi
        env:
          AZURE_APP_NAME: ${{ secrets.AZURE_APP_NAME }}

      # Step 7: Deploy Docker Image to Azure App Service
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_APP_NAME }}
          images: ${{ secrets.DOCKER_USERNAME }}/gradio-app:latest
